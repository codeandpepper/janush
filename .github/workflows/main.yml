name: Test application generation

on:
  push:
    branches:
      - main
      - feature/branding2

  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  prettier-check:
    name: Prettier check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install dependencies
        run: npm install
      - name: Run prettier check
        run: npm run format:check

  test-schematics:
    name: Test schematics
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install dependencies
        run: npm install
      - name: Run schematics tests
        run: npm run test

  generate-application:
    name: Generate application
    needs: [test-schematics, prettier-check]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install dependencies
        run: npm install
      - name: Install schematics CLI
        run: npm install -g @angular-devkit/schematics-cli
      - name: Build schematics
        run: npm run build
      - name: Link npm package
        run: npm link
      - name: Generate application
        run: janush --name=januszexaplikacja --types={web,cloud} --modules={authentication,} --e2e --e2eModule=Cypress --skipInstall --isAutoGenerated
      - name: Upload generated application
        uses: actions/upload-artifact@master
        with:
          name: januszexaplikacja
          path: januszexaplikacja

  test-web:
    name: Test web
    needs: [generate-application]
    runs-on: ubuntu-latest
    steps:
      - name: Download generated application
        uses: actions/download-artifact@master
        with:
          name: januszexaplikacja
          path: januszexaplikacja
      - name: Install dependencies
        working-directory: ./januszexaplikacja/web
        run: npm install
      - name: Run tests
        working-directory: ./januszexaplikacja/web
        run: npm run test -- --watchAll=false
        env:
          CI: true

  test-cloud:
    name: Test cloud
    needs: [generate-application]
    runs-on: ubuntu-latest
    steps:
      - name: Download generated application
        uses: actions/download-artifact@master
        with:
          name: januszexaplikacja
          path: januszexaplikacja
      - name: Install dependencies
        working-directory: ./januszexaplikacja/cloud
        run: npm install
      - name: Run tests
        working-directory: ./januszexaplikacja/cloud
        run: npm run test -- --watchAll=false
        env:
          CI: true

  push-to-dedicated-repo:
    name: Push to dedicated repo
    #if: github.ref == 'refs/heads/main'
    needs: [test-web, test-cloud]
    runs-on: ubuntu-latest
    steps:
      - name: Download generated application
        uses: actions/download-artifact@master
        with:
          name: januszexaplikacja
          path: januszexaplikacja
      - name: Push to dedicated repo
        env:
          BOT_PERSONAL_ACCESS_TOKEN: ${{ secrets.BOT_PERSONAL_ACCESS_TOKEN }}
        run: |
          cd januszexaplikacja
          git config --global user.name JanushBot
          git config --global user.email janush@codeandpepper.com
          git init -b main
          git add .
          git commit -m "Automatically generated by JanushBot (SHA: $GITHUB_SHA)"
          git push https://${BOT_PERSONAL_ACCESS_TOKEN}@github.com/codeandpepper/janush.app.git main --force
