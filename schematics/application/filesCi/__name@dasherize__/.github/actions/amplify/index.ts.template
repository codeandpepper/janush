import { exportVariable, setFailed } from "@actions/core";
import { exec, getExecOutput } from "@actions/exec";

const deployAmplify = async () => {
  try {
    await exec(
      "npm run cdk deploy JanushAutoGeneratedAppCiStack -- --require-approval never",
      null,
      { cwd: "./cloud" },
    );
    const s3BucketName = await getExecOutput(
      "aws cloudformation describe-stacks --stack-name JanushAutoGeneratedAppCiStack --query \"Stacks[0].Outputs[?ExportName=='s3BucketNameJanushAutoGeneratedApp'].OutputValue\" --output text",
      null,
      { cwd: "./cloud" },
    );
    const amplifyAppId = await getExecOutput(
      "aws cloudformation describe-stacks --stack-name JanushAutoGeneratedAppCiStack --query \"Stacks[0].Outputs[?ExportName=='amplifyAppId'].OutputValue\" --output text",
      null,
      { cwd: "./cloud" },
    );
    const amplifyAppBranchName = await getExecOutput(
      "aws cloudformation describe-stacks --stack-name JanushAutoGeneratedAppCiStack --query \"Stacks[0].Outputs[?ExportName=='amplifyAppBranchName'].OutputValue\" --output text",
      null,
      {
        cwd: "./cloud",
      },
    );
    exportVariable("s3BucketName", s3BucketName.stdout.trim());
    exportVariable("amplifyAppId", amplifyAppId.stdout.trim());
    exportVariable("amplifyAppBranchName", amplifyAppBranchName.stdout.trim());
  } catch (error) {
    setFailed(error.message);
  }
};

deployAmplify();
