import { AppBar, Toolbar, Button } from "@mui/material";
import { VFC } from "react";

import { Logo } from "@layouts/Logo/Logo";
<% if (isAuth) { %>import { Auth } from "aws-amplify";
import { useUserContext } from "@features/UserProvider/useUserContext";
import { NavLink } from "react-router-dom";
import { Paths } from "@routing/paths";<% } %>

interface Props {
  showLogo?: boolean;
}

export const TopAppBar: VFC<Props> = ({ showLogo = true }) => {
  <% if (isAuth) { %>const { user } = useUserContext();

  const signOut = async () => {
    try {
      await Auth.signOut();
    } catch (e) {
      console.error(e);
    }
  };<% } %>
  return (
    <AppBar position="static">
      <Toolbar sx={{ display: "flex" }}>
        {showLogo && <Logo />}
        <% if (isAuth) { %>{user ? (
          <Button data-testid="sign-out-button-in-top-app-bar" onClick={signOut} color="inherit">
            Sign out
          </Button>
        ) : (
          <Button
            data-testid="sign-in-button-in-top-app-bar"
            component={NavLink}
            to={Paths.SIGN_IN_PATH}
            color="inherit">
            Sign in
          </Button>
        )}<% } %>
      </Toolbar>
    </AppBar>
  );
};
